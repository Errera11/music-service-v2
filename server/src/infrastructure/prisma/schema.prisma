

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id String @id
    name String @unique
    email String @unique
    password String
    role String[]
    fovorite Favorite[]
    playlist Playlist[]
    email_auth EmailAuth?
}

model Song {
    id Int @id @default(autoincrement())
    name String @unique
    description String?
    audio String @unique
    artist String
    favorite Favorite[]
    playlist_songs PlaylistSongs[]
    album_songs AlbumSongs[]
}

model Album {
    id Int @id @default(autoincrement())
    title String
    description String
    author String
    album_songs AlbumSongs[]
}


model Favorite {
    id Int @id @default(autoincrement())
    user User @relation(fields: [user_id], references: [id])
    song Song @relation(fields: [song_id], references: [id])
    user_id String
    song_id Int
}

model Playlist {
    id Int @id @default(autoincrement())
    title String
    description String
    user User @relation(fields: [user_id], references: [id])
    user_id String
    playlist_songs PlaylistSongs[]
}

model AlbumSongs {
    id Int @id @default(autoincrement())
    album Album @relation(fields: [album_id], references: [id])
    album_id Int
    song Song @relation(fields: [song_id], references: [id])
    song_id Int
}

model PlaylistSongs {
    id Int @id @default(autoincrement())
    playlist Playlist @relation(fields: [playlist_id], references: [id])
    playlist_id Int
    song Song @relation(fields: [song_id], references: [id])
    song_id Int
}

model EmailAuth {
    id Int @id @default(autoincrement())
    user User @relation(fields: [user_id], references: [id])
    user_id String @unique
    is_auth Boolean
}